{"ast":null,"code":"var _jsxFileName = \"/Users/nicklu/Documents/Git/JavaScript/hw/meme-generator-nicklutuxun/src/components/Search.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeText = event => {\n      let id = event.target.id;\n\n      if (id === \"top-input\") {\n        this.setState({\n          toptext: event.target.value\n        });\n      } else if (id === \"bottom-input\") {\n        this.setState({\n          bottomtext: event.target.value\n        });\n      }\n    };\n\n    this.fetchMemes = async event => {\n      event.preventDefault();\n      const memeAPI = \"https://api.imgflip.com/get_memes\";\n\n      try {\n        const response = await fetch(`${memeAPI}`);\n        const data = await response.json();\n        console.log(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      toptext: \"hello\",\n      bottomtext: \"hello\"\n    };\n  }\n\n  generateMeme(images) {\n    const image = images[Math.floor(Math.random() * images.length)];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"field has-addons\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"control is-expanded\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"input is-large is-fullwidth is-family-monospace\",\n            id: \"top-input\",\n            placeholder: \"Top text\",\n            type: \"text\",\n            value: this.state.toptext,\n            onChange: this.changeText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"field has-addons\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"control is-expanded\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"input is-large is-fullwidth is-family-monospace\",\n            id: \"bottom-input\",\n            placeholder: \"Bottom text\",\n            type: \"text\",\n            value: this.state.bottomtext,\n            onChange: this.changeText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"field has-addons\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"control is-expanded\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button is-link is-large is-fullwidth\",\n            id: \"go-btn\",\n            onClick: this.fetchMemes,\n            children: \"Go!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/nicklu/Documents/Git/JavaScript/hw/meme-generator-nicklutuxun/src/components/Search.js"],"names":["React","Component","Search","constructor","props","changeText","event","id","target","setState","toptext","value","bottomtext","fetchMemes","preventDefault","memeAPI","response","fetch","data","json","console","log","err","state","generateMeme","images","image","Math","floor","random","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toptext: \"hello\",\n      bottomtext: \"hello\"\n    }\n  }\n\n  changeText = (event) => {\n    let id = event.target.id;\n    if (id === \"top-input\") {\n      this.setState({toptext : event.target.value});\n    } else if (id === \"bottom-input\") {\n      this.setState({bottomtext : event.target.value});\n    }\n  }\n\n  fetchMemes = async (event) => {\n    event.preventDefault();\n    const memeAPI = \"https://api.imgflip.com/get_memes\";\n    \n    try {\n      const response = await fetch(`${memeAPI}`);\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  generateMeme(images) {\n    const image = images[Math.floor(Math.random() * images.length)]; \n  }\n\n  render() {\n    return (\n      <section class=\"section\">\n        <div class=\"field has-addons\">\n          <div class=\"control is-expanded\">\n            <input\n              class=\"input is-large is-fullwidth is-family-monospace\"\n              id=\"top-input\"\n              placeholder=\"Top text\"\n              type=\"text\"\n              value={this.state.toptext}\n              onChange={this.changeText}\n            />\n          </div>\n        </div>\n        <div class=\"field has-addons\">\n          <div class=\"control is-expanded\">\n            <input\n              class=\"input is-large is-fullwidth is-family-monospace\"\n              id=\"bottom-input\"\n              placeholder=\"Bottom text\"\n              type=\"text\"\n              value={this.state.bottomtext}\n              onChange={this.changeText}\n            />\n          </div>\n        </div>\n        <div class=\"field has-addons\">\n          <div class=\"control is-expanded\">\n            <button \n              class=\"button is-link is-large is-fullwidth\" \n              id=\"go-btn\"\n              onClick={this.fetchMemes}\n            >\n              Go!\n            </button>\n          </div>\n        </div>\n      </section>\n    );\n    }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}